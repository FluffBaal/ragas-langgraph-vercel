"use strict";exports.id=93,exports.ids=[93],exports.modules={4796:(e,t,a)=>{a.a(e,async(e,n)=>{try{var r=a(3990),i=e([r]);r=(i.then?(await i)():i)[0],a.o(r,"BaseDocumentLoader")&&a.d(t,{BaseDocumentLoader:function(){return r.BaseDocumentLoader}}),n()}catch(e){n(e)}})},221:(e,t,a)=>{a.a(e,async(e,n)=>{try{a.d(t,{k:()=>d});var r=a(2415),i=a(4796),o=a(977),s=a(3402),l=e([r,i,s]);[r,i,s]=l.then?(await l)():l;class d extends i.BaseDocumentLoader{constructor(e,{splitPages:t=!0,pdfjs:a=c,parsedItemSeparator:n=""}={}){super(),Object.defineProperty(this,"blob",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"splitPages",{enumerable:!0,configurable:!0,writable:!0,value:!0}),Object.defineProperty(this,"pdfjs",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"parsedItemSeparator",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.blob=e,this.splitPages=t??this.splitPages,this.pdfjs=a,this.parsedItemSeparator=n}async load(){let{getDocument:e,version:t}=await this.pdfjs(),a=await e({data:new Uint8Array(await this.blob.arrayBuffer()),useWorkerFetch:!1,isEvalSupported:!1,useSystemFonts:!0}).promise,n=await a.getMetadata().catch(()=>null),i=[];for(let e=1;e<=a.numPages;e+=1){let o;let s=await a.getPage(e),l=await s.getTextContent();if(0===l.items.length)continue;let c=[];for(let e of l.items)"str"in e&&(o!==e.transform[5]&&o?c.push(`
${e.str}`):c.push(e.str),o=e.transform[5]);let d=c.join(this.parsedItemSeparator);i.push(new r.Document({pageContent:d,metadata:{pdf:{version:t,info:n?.info,metadata:n?.metadata,totalPages:a.numPages},loc:{pageNumber:e}}}))}return this.splitPages?i:0===i.length?[]:[new r.Document({pageContent:(0,o.Q)(i),metadata:{pdf:{version:t,info:n?.info,metadata:n?.metadata,totalPages:a.numPages}}})]}}async function c(){try{let{default:e}=await a.e(181).then(a.t.bind(a,7181,19)),{getDocument:t,version:n}=e;return{getDocument:t,version:n}}catch(e){throw console.error(e),Error("Failed to load pdf-parse. Please install it with eg. `npm install pdf-parse`.")}}n()}catch(e){n(e)}})},977:(e,t,a)=>{a.d(t,{Q:()=>n});let n=e=>e.map(e=>e.pageContent).join("\n\n")},3402:(e,t,a)=>{a.a(e,async(e,n)=>{try{a.d(t,{C:()=>o});var r=a(1734),i=e([r]);function o({oldEntrypointName:e,newEntrypointName:t,newPackageName:a="@langchain/community"}){let n="";void 0===t?n=`/${e}`:""!==t&&(n=`/${t}`);let i=`[WARNING]: Importing from "langchain/${e}" is deprecated.

Instead, please add the "${a}" package to your project with e.g.

    $ npm install ${a}

and import from "${a}${n}".

This will be mandatory after the next "langchain" minor version bump to 0.3.`;"@langchain/core"===a&&(i=`[WARNING]: Importing from "langchain/${e}" is deprecated.

Instead, please import from "${a}${n}".

This will be mandatory after the next "langchain" minor version bump to 0.3.`),"true"!==(0,r.lS)("LANGCHAIN_SUPPRESS_MIGRATION_WARNINGS")&&console.warn(i)}r=(i.then?(await i)():i)[0],n()}catch(e){n(e)}})},1734:(e,t,a)=>{a.a(e,async(e,n)=>{try{a.d(t,{lS:()=>r.getEnvironmentVariable});var r=a(2482),i=e([r]);r=(i.then?(await i)():i)[0],n()}catch(e){n(e)}})},5093:(e,t,a)=>{a.a(e,async(e,n)=>{try{a.d(t,{WebPDFLoader:()=>r.k});var r=a(221),i=e([r]);r=(i.then?(await i)():i)[0],n()}catch(e){n(e)}})}};