"use strict";(()=>{var e={};e.id=290,e.ids=[290],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},2048:e=>{e.exports=require("fs")},2615:e=>{e.exports=require("http")},8791:e=>{e.exports=require("https")},7360:e=>{e.exports=require("url")},1568:e=>{e.exports=require("zlib")},3990:e=>{e.exports=import("@langchain/core/document_loaders/base")},2415:e=>{e.exports=import("@langchain/core/documents")},7310:e=>{e.exports=import("@langchain/core/prompts")},2482:e=>{e.exports=import("@langchain/core/utils/env")},9484:e=>{e.exports=import("@langchain/openai")},8799:(e,t,n)=>{n.a(e,async(e,o)=>{try{n.r(t),n.d(t,{originalPathname:()=>h,patchFetch:()=>u,requestAsyncStorage:()=>d,routeModule:()=>c,serverHooks:()=>p,staticGenerationAsyncStorage:()=>m});var s=n(9303),i=n(8716),r=n(670),a=n(6047),l=e([a]);a=(l.then?(await l)():l)[0];let c=new s.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/generate/route",pathname:"/api/generate",filename:"route",bundlePath:"app/api/generate/route"},resolvedPagePath:"/home/fluff_baal/repos/Aim-Assignment-7-8/Real assignment 07/ragas-langgraph-vercel/src/app/api/generate/route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:d,staticGenerationAsyncStorage:m,serverHooks:p}=c,h="/api/generate/route";function u(){return(0,r.patchFetch)({serverHooks:p,staticGenerationAsyncStorage:m})}o()}catch(e){o(e)}})},7677:(e,t,n)=>{n.d(t,{Z:()=>u});let o=require("crypto");var s=n.n(o);let i={randomUUID:s().randomUUID},r=new Uint8Array(256),a=r.length,l=[];for(let e=0;e<256;++e)l.push((e+256).toString(16).slice(1));let u=function(e,t,n){if(i.randomUUID&&!t&&!e)return i.randomUUID();let o=(e=e||{}).random||(e.rng||function(){return a>r.length-16&&(s().randomFillSync(r),a=0),r.slice(a,a+=16)})();if(o[6]=15&o[6]|64,o[8]=63&o[8]|128,t){n=n||0;for(let e=0;e<16;++e)t[n+e]=o[e];return t}return function(e,t=0){return l[e[t+0]]+l[e[t+1]]+l[e[t+2]]+l[e[t+3]]+"-"+l[e[t+4]]+l[e[t+5]]+"-"+l[e[t+6]]+l[e[t+7]]+"-"+l[e[t+8]]+l[e[t+9]]+"-"+l[e[t+10]]+l[e[t+11]]+l[e[t+12]]+l[e[t+13]]+l[e[t+14]]+l[e[t+15]]}(o)}},6047:(e,t,n)=>{n.a(e,async(e,o)=>{try{n.r(t),n.d(t,{GET:()=>d,OPTIONS:()=>m,POST:()=>c,dynamic:()=>h,maxDuration:()=>p,runtime:()=>g});var s=n(7070),i=n(3825),r=n(5563),a=n(2415),l=n(4235),u=e([i,r,a]);[i,r,a]=u.then?(await u)():u;let p=60,h="force-dynamic",g="nodejs";async function c(e){try{let t;let o=e.headers.get("content-length");if(o&&parseInt(o)>10485760)return s.NextResponse.json({error:"Request too large. Please upload smaller documents (max 10MB total)."},{status:413});let u=e.ip||e.headers.get("x-forwarded-for")||"unknown";if(!l.A6.isAllowed(u))return s.NextResponse.json({error:"Rate limit exceeded. Please try again later.",remainingRequests:l.A6.getRemainingRequests(u)},{status:429});let c=await e.formData(),d=c.get("config");try{t=JSON.parse(d||"{}")}catch{t={}}let m=l.Lt.safeParse(t);if(!m.success)return s.NextResponse.json({error:"Invalid configuration",details:m.error.errors},{status:400});let p=m.data,h=[],g=0;for(;;){let e;let t=c.get(`document_${g}`);if(!t)break;let o=(0,l.D0)(t);if(!o.valid)return s.NextResponse.json({error:`File ${t.name}: ${o.error}`},{status:400});if(t.name.toLowerCase().endsWith(".pdf"))try{let{WebPDFLoader:o}=await n.e(93).then(n.bind(n,5093)),s=new Blob([await t.arrayBuffer()],{type:"application/pdf"}),i=new o(s);e=(await i.load()).map(e=>e.pageContent).join("\n\n")}catch(o){let n=await t.arrayBuffer();e=new TextDecoder("utf-8",{fatal:!1}).decode(n)}else{let n=await t.arrayBuffer();e=new TextDecoder("utf-8",{fatal:!1}).decode(n)}let i=(0,l.bS)(e);if(!i.valid)return s.NextResponse.json({error:`File ${t.name}: ${i.error}`},{status:400});h.push(new a.Document({pageContent:e,metadata:{source:t.name,size:t.size,type:t.type,uploadTimestamp:new Date().toISOString()}})),g++}if(0===h.length)return s.NextResponse.json({error:"No valid documents provided"},{status:400});let f=p.openaiApiKey||process.env.OPENAI_API_KEY;if(!f)return s.NextResponse.json({error:"OpenAI API key is required. Please provide your API key."},{status:400});let _=(0,r.Q)(f),v=new i.W(_),x=h.reduce((e,t)=>e+t.pageContent.length,0),y=x>1e4||h.length>3,w=new Promise((e,t)=>setTimeout(()=>t(Error("Generation timeout - process taking too long")),5e4));y&&(console.log(`Large request detected (${x} chars, ${h.length} docs). Using simplified generation.`),p.maxQuestions>5&&(p.maxQuestions=5));let q=await Promise.race([v.run(h),w]),A={...q};if(p.maxQuestions<q.evolved_questions.length){let e=q.evolved_questions.slice(0,p.maxQuestions),t=new Set(e.map(e=>e.id));A={...q,evolved_questions:e,question_answers:q.question_answers.filter(e=>t.has(e.question_id)),question_contexts:q.question_contexts.filter(e=>t.has(e.question_id)),generation_metadata:{...q.generation_metadata,total_questions:e.length,evolution_types_count:{simple:e.filter(e=>"simple"===e.evolution_type).length,multi_context:e.filter(e=>"multi_context"===e.evolution_type).length,reasoning:e.filter(e=>"reasoning"===e.evolution_type).length}}}}if(p.evolutionTypes.length<3){let e=new Set(p.evolutionTypes),t=A.evolved_questions.filter(t=>e.has(t.evolution_type)),n=new Set(t.map(e=>e.id));A={...A,evolved_questions:t,question_answers:A.question_answers.filter(e=>n.has(e.question_id)),question_contexts:A.question_contexts.filter(e=>n.has(e.question_id)),generation_metadata:{...A.generation_metadata,total_questions:t.length,evolution_types_count:{simple:t.filter(e=>"simple"===e.evolution_type).length,multi_context:t.filter(e=>"multi_context"===e.evolution_type).length,reasoning:t.filter(e=>"reasoning"===e.evolution_type).length}}}}return s.NextResponse.json(A,{status:200,headers:{"Content-Type":"application/json","Cache-Control":"no-cache","Access-Control-Allow-Origin":"*","Access-Control-Allow-Methods":"POST, OPTIONS","Access-Control-Allow-Headers":"Content-Type"}})}catch(e){if(console.error("Generation error:",e),e instanceof Error){if(e.message.includes("rate limit"))return s.NextResponse.json({error:"Rate limit exceeded. Please try again later."},{status:429});if(e.message.includes("token limit")||e.message.includes("context length"))return s.NextResponse.json({error:"Document too large. Please reduce document size."},{status:413});if(e.message.includes("API key")||e.message.includes("authentication"))return s.NextResponse.json({error:"OpenAI API configuration error."},{status:500});if(e.message.includes("timeout"))return s.NextResponse.json({error:"Request timeout. Please try again with smaller documents."},{status:408})}return s.NextResponse.json({error:"Internal server error",message:void 0},{status:500})}}async function d(){return s.NextResponse.json({message:"RAGAS LangGraph Generation API",version:"1.0.0",status:"operational",endpoints:{POST:"Generate synthetic data from documents",GET:"API information"},limits:{maxFileSize:"10MB",maxFiles:10,supportedFormats:[".txt",".md",".pdf"]}},{status:200,headers:{"Access-Control-Allow-Origin":"*","Access-Control-Allow-Methods":"GET, POST, OPTIONS","Access-Control-Allow-Headers":"Content-Type"}})}async function m(){return new s.NextResponse(null,{status:200,headers:{"Access-Control-Allow-Origin":"*","Access-Control-Allow-Methods":"GET, POST, OPTIONS","Access-Control-Allow-Headers":"Content-Type","Access-Control-Max-Age":"86400"}})}o()}catch(e){o(e)}})},5563:(e,t,n)=>{n.a(e,async(e,o)=>{try{n.d(t,{Q:()=>r,g:()=>a});var s=n(9484),i=e([s]);function r(e){let t=e||process.env.OPENAI_API_KEY;if(!t)throw Error("OpenAI API key is required");return new s.ChatOpenAI({openAIApiKey:t,modelName:"gpt-4.1-mini",temperature:.7,maxTokens:2e3,timeout:6e4,maxRetries:3})}function a(){return!!process.env.OPENAI_API_KEY}s=(i.then?(await i)():i)[0],o()}catch(e){o(e)}})},3825:(e,t,n)=>{n.a(e,async(e,o)=>{try{n.d(t,{W:()=>l});var s=n(7310),i=n(7677),r=e([s]);s=(r.then?(await r)():r)[0];class a{addNode(e,t){this.nodes.set(e,t)}addEdge(e,t){this.edges.set(e,t)}setStart(e){this.startNode=e}async invoke(e){let t={...e},n=this.startNode;for(;n&&"END"!==n;){let e=this.nodes.get(n);if(!e)throw Error(`Node ${n} not found`);let o=await e(t);t={...t,...o},n=this.edges.get(n)||"END"}return t}constructor(){this.nodes=new Map,this.edges=new Map,this.startNode=""}}class l{constructor(e){this.llm=e,this.graph=this.createGraph()}createGraph(){let e=new a;return e.addNode("process_documents",this.processDocuments.bind(this)),e.addNode("simple_evolution",this.simpleEvolution.bind(this)),e.addNode("multi_context_evolution",this.multiContextEvolution.bind(this)),e.addNode("reasoning_evolution",this.reasoningEvolution.bind(this)),e.addNode("generate_answers",this.generateAnswers.bind(this)),e.addNode("retrieve_contexts",this.retrieveContexts.bind(this)),e.setStart("process_documents"),e.addEdge("process_documents","simple_evolution"),e.addEdge("simple_evolution","multi_context_evolution"),e.addEdge("multi_context_evolution","reasoning_evolution"),e.addEdge("reasoning_evolution","generate_answers"),e.addEdge("generate_answers","retrieve_contexts"),e.addEdge("retrieve_contexts","END"),e}async processDocuments(e){let t=[];for(let n=0;n<e.documents.length;n++){let o=e.documents[n];try{let e=await this.extractInitialQuestions(o.pageContent);t.push({id:`doc_${n}`,content:o.pageContent,metadata:o.metadata,initial_questions:e})}catch(t){e.errors.push(`Document processing error: ${t}`)}}return{processed_docs:t}}async extractInitialQuestions(e){let t=s.ChatPromptTemplate.fromTemplate(`
      Based on the following content, generate 2 basic comprehension questions.
      Return only the questions, one per line, without numbering.
      
      Content: {content}
    `);try{let n=t.pipe(this.llm),o=e.split("\n"),s=e,i=0;for(let e=0;e<Math.min(10,o.length);e++){let t=o[e].trim();if(t.match(/^(Date|Version|Author|License|Table of Contents):/i)||t.match(/^#+\s*$/)||t.length<10)i=e+1;else break}i>0&&(s=o.slice(i).join("\n"));let r=(await n.invoke({content:s.slice(0,4e3)})).content.toString().split("\n").map(e=>e.trim()).filter(e=>e&&e.endsWith("?")).slice(0,3);return r.length>0?r:["What is the main topic discussed in this document?"]}catch(e){return["What is the main topic discussed in this document?"]}}async simpleEvolution(e){let t=[...e.evolved_questions||[]],n=[...e.errors||[]];for(let o of e.processed_docs)for(let e of o.initial_questions)try{let n=await this.evolveQuestionSimple(e,o.content);n&&t.push({id:(0,i.Z)(),question:n,evolution_type:"simple",complexity_score:5,source_document_ids:[o.id],metadata:{original_question:e,evolution_timestamp:new Date().toISOString()}})}catch(e){n.push(`Simple evolution error: ${e}`)}return{evolved_questions:t,errors:n}}async evolveQuestionSimple(e,t){let n=s.ChatPromptTemplate.fromTemplate(`
      Evolve the following question to make it more complex and educational.
      Add constraints, deepen the inquiry, or increase specificity.
      
      Original Question: {question}
      Context: {context}
      
      Return only the evolved question:
    `);try{let o=n.pipe(this.llm);return(await o.invoke({question:e,context:t.slice(0,1e3)})).content.toString().trim()}catch(e){return null}}async multiContextEvolution(e){let t=[...e.evolved_questions||[]],n=[...e.errors||[]];if(e.processed_docs.length<2)return n.push("Need at least 2 documents for multi-context evolution"),{evolved_questions:t,errors:n};for(let o=0;o<e.processed_docs.length;o++)for(let s=o+1;s<Math.min(o+2,e.processed_docs.length);s++){let r=e.processed_docs[o],a=e.processed_docs[s];if(r.initial_questions.length>0)try{let e=await this.evolveQuestionMultiContext(r.initial_questions[0],r.content,a.content);e&&t.push({id:(0,i.Z)(),question:e,evolution_type:"multi_context",complexity_score:7,source_document_ids:[r.id,a.id],metadata:{original_question:r.initial_questions[0],requires_multiple_contexts:!0,evolution_timestamp:new Date().toISOString()}})}catch(e){n.push(`Multi-context evolution error: ${e}`)}}return{evolved_questions:t,errors:n}}async evolveQuestionMultiContext(e,t,n){let o=s.ChatPromptTemplate.fromTemplate(`
      Evolve the following question to require synthesis from both contexts.
      The evolved question should be answerable only by combining information from both sources.
      
      Original Question: {question}
      Context 1: {context1}
      Context 2: {context2}
      
      Return only the evolved question:
    `);try{let s=o.pipe(this.llm);return(await s.invoke({question:e,context1:t.slice(0,800),context2:n.slice(0,800)})).content.toString().trim()}catch(e){return null}}async reasoningEvolution(e){let t=[...e.evolved_questions||[]],n=[...e.errors||[]];for(let o of t.slice(0,2)){let s="";for(let t of e.processed_docs)if(o.source_document_ids.includes(t.id)){s=t.content;break}if(s)try{let e=await this.evolveQuestionReasoning(o.question,s);e&&t.push({id:(0,i.Z)(),question:e,evolution_type:"reasoning",complexity_score:8,source_document_ids:o.source_document_ids,metadata:{original_question:o.question,requires_reasoning:!0,evolution_timestamp:new Date().toISOString()}})}catch(e){n.push(`Reasoning evolution error: ${e}`)}}return{evolved_questions:t,errors:n}}async evolveQuestionReasoning(e,t){let n=s.ChatPromptTemplate.fromTemplate(`
      Evolve the following question to require complex reasoning and analysis.
      The question should test deep understanding, causal reasoning, or critical evaluation.
      
      Original Question: {question}
      Context: {context}
      
      Return only the evolved question:
    `);try{let o=n.pipe(this.llm);return(await o.invoke({question:e,context:t.slice(0,1e3)})).content.toString().trim()}catch(e){return null}}async generateAnswers(e){let t=[];for(let n of e.evolved_questions){let o=[];for(let t of e.processed_docs)n.source_document_ids.includes(t.id)&&o.push(t.content);if(o.length>0)try{let e=await this.generateAnswer(n.question,o);e&&t.push({question_id:n.id,answer:e,confidence_score:.85,source_documents:n.source_document_ids})}catch(t){e.errors.push(`Answer generation error: ${t}`)}}return{question_answers:t}}async generateAnswer(e,t){let n=t.join("\n\n").slice(0,2e3),o=s.ChatPromptTemplate.fromTemplate(`
      Answer the following question based on the provided contexts.
      Provide a comprehensive answer using only the information in the contexts.
      
      Question: {question}
      Contexts: {contexts}
      
      Answer:
    `);try{let t=o.pipe(this.llm);return(await t.invoke({question:e,contexts:n})).content.toString().trim()}catch(e){return null}}async retrieveContexts(e){let t=[];for(let n of e.evolved_questions){let o=[],s=[],i=[];for(let t of e.processed_docs)if(n.source_document_ids.includes(t.id))for(let e of this.extractRelevantPassages(n.question,t.content))o.push(e),s.push(.8),i.push(t.id);o.length>0&&t.push({question_id:n.id,contexts:o.slice(0,3),relevance_scores:s.slice(0,3),context_sources:i.slice(0,3)})}return{question_contexts:t}}extractRelevantPassages(e,t){let n=[],o=t.split("\n"),s=0;for(let e=0;e<Math.min(20,o.length);e++){let t=o[e].trim();if(t.match(/^(Date|Version|Author|License|Table of Contents|Executive Summary):/i)||t.match(/^#+\s*(Date|Version|Author|License|Table of Contents|Executive Summary)/i)||t.match(/^(Context \d+|Relevance:|Source:)/i)||""===t||t.length<10)s=e+1;else if(t.length>30&&!t.includes(":"))break}let i=o.slice(s).join("\n"),r=i.split(/\n\n+/).filter(e=>e.trim().length>50);if(0===r.length){let e=i.split("\n").filter(e=>e.trim().length>20),t="";for(let o of e)t.length+o.length>500&&t.length>100?(n.push(t.trim()),t=o):t+=(t?"\n":"")+o;t.trim().length>50&&n.push(t.trim())}else for(let e of r)e.trim().length>50&&(e.length>1e3?n.push(e.substring(0,1e3)+"..."):n.push(e.trim()));if(0===n.length&&t.length>100)for(let e=0;e<t.length;e+=500){let o=t.substring(e,Math.min(e+500,t.length));o.trim().length>50&&n.push(o.trim())}return n.slice(0,3)}async run(e){try{let t=await this.graph.invoke({documents:e,processed_docs:[],evolved_questions:[],question_answers:[],question_contexts:[],errors:[]});return{evolved_questions:t.evolved_questions,question_answers:t.question_answers,question_contexts:t.question_contexts,generation_metadata:{total_questions:t.evolved_questions.length,evolution_types_count:{simple:t.evolved_questions.filter(e=>"simple"===e.evolution_type).length,multi_context:t.evolved_questions.filter(e=>"multi_context"===e.evolution_type).length,reasoning:t.evolved_questions.filter(e=>"reasoning"===e.evolution_type).length},processing_errors:t.errors,generation_timestamp:new Date().toISOString()}}}catch(e){throw Error(`Generation failed: ${e instanceof Error?e.message:"Unknown error"}`)}}}o()}catch(e){o(e)}})},4235:(e,t,n)=>{n.d(t,{A6:()=>c,D0:()=>a,Lt:()=>i,bS:()=>l});var o=n(1585),s=n(6033);let i=o.Ry({maxQuestions:o.Rx().min(1).max(50).default(10),evolutionTypes:o.IX(o.Km(["simple","multi_context","reasoning"])).default(["simple","multi_context","reasoning"]),complexityTarget:o.Rx().min(1).max(10).default(5),language:o.Z_().default("en"),includeMetadata:o.O7().default(!0),openaiApiKey:o.Z_().optional()});o.Ry({name:o.Z_().min(1),size:o.Rx().max(10485760),type:o.Z_().optional()});let r=o.Ry({content:o.Z_().min(100,"Document content must be at least 100 characters"),metadata:o.IM(o.Yj()).optional()});function a(e){return["txt","md","pdf"].includes(e.name.toLowerCase().split(".").pop()||"")?e.size>10485760?{valid:!1,error:"File too large (max 10MB)"}:{valid:!0}:{valid:!1,error:"Invalid file type. Only .txt, .md, and .pdf files are allowed."}}function l(e){try{return r.parse({content:e}),{valid:!0}}catch(e){if(e instanceof s.jm)return{valid:!1,error:e.errors[0].message};return{valid:!1,error:"Invalid document content"}}}o.Ry({documents:o.IX(r).min(1,"At least one document is required"),config:i.optional()});class u{constructor(e=100,t=9e5){this.maxRequests=e,this.windowMs=t,this.requests=new Map}isAllowed(e){let t=Date.now(),n=(this.requests.get(e)||[]).filter(e=>t-e<this.windowMs);return!(n.length>=this.maxRequests)&&(n.push(t),this.requests.set(e,n),!0)}getRemainingRequests(e){let t=Date.now(),n=(this.requests.get(e)||[]).filter(e=>t-e<this.windowMs);return Math.max(0,this.maxRequests-n.length)}}let c=new u}};var t=require("../../../webpack-runtime.js");t.C(e);var n=e=>t(t.s=e),o=t.X(0,[276,972,585],()=>n(8799));module.exports=o})();